name: "Generate test and publish features - (changes only)"
on:
  # push:
  #   branches:
  #     - main

  workflow_dispatch:

jobs:
  find-feature:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-latest
    name: Find features
    outputs:
      changed_features: ${{ steps.feature-specs.outputs.changed_features }}

    steps:
      - uses: actions/checkout@v3
      - id: feature-specs
        uses: ./.github/actions/list-changed-features-action
        with:
          path: .

  test:
    needs: [find-feature]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJson( needs.find-feature.outputs.changed_features )}}
        baseImage: ["mcr.microsoft.com/devcontainers/base:debian"]

    steps:
      - uses: actions/checkout@v3

      - name: Shell Linter
        uses: azohra/shell-linter@v0.6.0
        with:
          path: "src/**/*.sh"
          severity: "error" # [style, info, warning, error]
        env:
          SHELLCHECK_OPTS: -e SC2072 # Acceptable use of decimal comparison

      - name: "install generator"
        run: |
          pipx install cookiecutter
          pipx install shfmt-py

      - name: Generate
        id: generate
        run: |
          generated_features=$(sudo tree -J  ./feature_specs | sudo jq -c '.[0].contents | map(.name) | map(sub(".yaml"; ""))')

          set -e
          if  jq -e 'any(. == "${{ matrix.features }}")' <<<  $generated_features ; then
          cd ..
          cookiecutter ./features/pkgs/feature-template --overwrite-if-exists --no-input --config-file ./features/feature_specs/${{ matrix.features }}.yaml
          cd features
          fi

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  create-pr:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "install generator"
        run: |
          pipx install cookiecutter
          pipx install shfmt-py

      - name: Generate
        id: generate
        run: |
          set -ex
          cd ..
          for d in ./features/feature_specs/* ; do  cookiecutter ./features/pkgs/feature-template --overwrite-if-exists --no-input --config-file "$d"; done
          cd features

      - name: Create PR for Features
        id: push_image_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -ex
          echo "Start."
          # Configure git and Push updates
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git config pull.rebase false
          branch=releases/automated-feature-generation-$GITHUB_RUN_ID
          git checkout -b $branch
          message='Automated feature generation  [skip ci]'

          git add src/**/\*
          git add test/**/\*
          git commit -m 'Automated feature generation  [skip ci]' || export NO_UPDATES=true
          # Push
          if [ "$NO_UPDATES" != "true" ] ; then
              git push origin "$branch"
              gh pr create --title "$message" --body "$message"
          fi
  test-global:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .

name: "Features - Test"
on:
  workflow_dispatch:
    inputs:
      on_changes_only:
        type: boolean
        description: 'run tests on changes from main branch only'
        default: false

  workflow_call:
    inputs:
      on_changes_only:
        type: boolean
        description: 'run tests on changes from main branch only'
        default: false


  pull_request:
  
  push:
    branches:
      - main
      
jobs:

  find-features:
    runs-on: ubuntu-latest
    name: Find features
    outputs:
      all-features: ${{ steps.features.outputs.folders }}
      changed-features: ${{ steps.changed-features.outputs.changed_features }}
    steps:
      - uses: actions/checkout@v3    
      - id: features
        uses: ./.github/actions/list-folder-action
        with:
          path: ./src

      - id: changed-features
        uses: ./.github/actions/list-changed-features-action
        with:
          path: .

  prepare-matrix:
    needs: [find-features]
    runs-on: ubuntu-latest
    outputs:
      features_to_test: ${{ steps.resolve_features.outputs.features_to_test }}
    steps:
      - name: "resolving features to test"
        id: resolve_features
        run: |
          if [ ${{ github.event_name	}} == 'pull_request' ]; then
            echo 'features_to_test=${{ needs.find-features.outputs.changed-features }}' >> $GITHUB_OUTPUT

          elif [ ${{ github.event_name	}} == 'push' ]; then
            echo 'features_to_test=${{ needs.find-features.outputs.changed-features }}' >> $GITHUB_OUTPUT
          
          elif [ ${{ github.event_name	}} == 'workflow_dispatch' ]; then

            if [ ${{ inputs.on_changes_only }} == 'true' ]; then
              echo 'features_to_test=${{ needs.find-features.outputs.changed-features }}' >> $GITHUB_OUTPUT
            else
              echo 'features_to_test=${{ needs.find-features.outputs.all-features }}' >> $GITHUB_OUTPUT
            fi
          
          elif [ ${{ github.event_name	}} == 'workflow_call' ]; then
            if [ ${{ inputs.on_changes_only }} == 'true' ]; then
              echo 'features_to_test=${{ needs.find-features.outputs.changed-features }}' >> $GITHUB_OUTPUT
            else
              echo 'features_to_test=${{ needs.find-features.outputs.all-features }}' >> $GITHUB_OUTPUT
            fi          
          fi
  
  test:
    needs: [find-features, prepare-matrix]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJson(needs.prepare-matrix.outputs.features_to_test) }}
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating test scenarios for '${{ matrix.features }}'"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .

  artificial-job:
    runs-on: ubuntu-latest
    steps:
      - name: do something
        run: "echo hi"